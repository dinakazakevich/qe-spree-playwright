name: E2E Tests

on:
  push:
    branches: 
        - main
  pull_request:
    branches: 
        - main

jobs:
  playwright:
    name: Playwright Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - uses: actions/setup-node@v4
        with:
           node-version: lts/*   
      - name: Install dependencies
        working-directory: ./playwright
        run: npm ci
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Start database services
        env:
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        run: |
          docker compose -f docker-compose-test.yml up -d postgres postgres_queue redis
      
      - name: Wait for database services
        run: |
          echo "Waiting for database services..."
          sleep 10
      
      - name: Start web service
        env:
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        run: |
          docker compose -f docker-compose-test.yml up -d web
      
      - name: Check web service logs
        env:
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        run: |
          sleep 5
          docker compose -f docker-compose-test.yml logs web
      
      - name: Wait for web service
        run: |
          echo "Waiting for web service to be ready..."
          timeout 120 bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 5; echo "Still waiting..."; done'
          echo "Web service is ready"
      
      - name: Run Playwright tests
        # env:
        #   SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        run: |
          docker compose -f docker-compose-test.yml run playwright
      
      # - name: Retrieve Playwright report
      #   if: always()
      #   env:
      #     SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      #   run: |
      #     mkdir -p playwright-report
      #     container_id=$(docker compose -f docker-compose-test.yml ps -q playwright)
      #     if [ ! -z "$container_id" ]; then
      #       docker cp $container_id:/app/playwright/playwright-report ./playwright-report || true
      #     fi
      
      - name: Retrieve Playwright artifacts
        if: always()
        env:
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        run: |
          # Create directories matching your subfolder structure
          mkdir -p playwright/playwright-report
          mkdir -p playwright/test-results
          
          # Get the container ID
          container_id=$(docker compose -f docker-compose-test.yml ps -q playwright)
          
          if [ ! -z "$container_id" ]; then
            # Copy from the correct subfolder paths in the container
            docker cp $container_id:/app/playwright/playwright-report/. ./playwright/playwright-report || true
            docker cp $container_id:/app/playwright/test-results/. ./playwright/test-results || true
            
            # Debug: show what was copied
            echo "Files in playwright/playwright-report:"
            ls -la ./playwright/playwright-report || echo "Directory empty or not found"
          else
            echo "No playwright container found!"
          fi

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright/playwright-report/
          retention-days: 7
          if-no-files-found: warn
      
      - name: Upload Playwright test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: playwright/test-results/
          retention-days: 7
          if-no-files-found: warn
            
            
      # - name: Upload Playwright report
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: playwright-report
      #     path: playwright-report/
      #     retention-days: 7
      
      - name: Cleanup
        if: always()
        run: |
          docker compose -f docker-compose-test.yml down -v